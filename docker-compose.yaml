version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zookeeperdata:/var/lib/zookeeper/data
      - zookeeperlogs:/var/lib/zookeeper/log

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:6.2.0
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    volumes:
      - kafkadata:/var/lib/kafka/data

  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry:6.2.0
    depends_on:
      - zookeeper
      - kafka

    ports:
      - "8082:8082"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_HOST_NAME: schema-registry

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092

  producer:
    build: ./producer
    container_name: kafka-producer
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
      - kafka-ui
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092

  consumer:
    build: ./consumer
    container_name: kafka-consumer
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
      - kafka-ui
      - producer
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092

  dashboard:
    build: ./dashboard
    container_name: dashboard
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
      - kafka-ui
      - producer
      - consumer
      - postgres
      - pgadmin
    ports:
      - "8502:8502"

  mongodb:
    container_name: mongodb
    image: mongo:4.4.6
    environment:
      - MONGO_INITDB_DATABASE=mongodb
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongopass
    ports:
      - '27017:27017'
    volumes:
      - mongodbvolume:/data/db

  mongo-express:
    container_name: mongo-express
    image: mongo-express:latest
    depends_on:
      - mongodb
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ADMINUSERNAME=mongo
      - ME_CONFIG_MONGODB_ADMINPASSWORD=mongopass
      - ME_CONFIG_BASICAUTH_USERNAME=adminuser
      - ME_CONFIG_BASICAUTH_PASSWORD=adminpasswd
      
    ports:
      - '8081:8081'
    volumes:
      - mongoexpress_volume:/data/db
    
  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: covid_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "5000:80"
    depends_on:
      - postgres
  

volumes:
  zookeeperdata:
  zookeeperlogs:
  kafkadata:
  mongodbvolume:
  mongoexpress_volume:
